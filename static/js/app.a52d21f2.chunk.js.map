{"version":3,"sources":["Images/notification.png","constants/Colors.js","components/TabBarIcon.js","components/Videocard.js","components/useGetData.js","contexts/MainContext.js","screens/HomeScreen.js","components/ResourceLinkCard.js","screens/LinksScreen.js","navigation/BottomTabNavigator.js","screens/ClassSelect.js","screens/SubjectSelect.js","components/YoutubePlayer.js","components/useGetUrl.js","components/TopicCard.js","screens/TopicSelect.js","App.js","navigation/useLinking.js","web-build/register-service-worker.js","Images/bg.jpg","Images/bg5.jpg","assets/fonts/SpaceMono-Regular.ttf","assets/loading.gif"],"names":["module","exports","TabBarIcon","props","Ionicons","name","size","style","marginBottom","color","focused","Colors","styles","createStackNavigator","StyleSheet","create","container","flex","marginTop","paddingHorizontal","textcontainer","backgroundColor","alignItems","justifyContent","borderBottomRightRadius","borderBottomLeftRadius","text","fontFamily","fontSize","padding","textAlign","textAlignVertical","Videocard","firstimage","imageURL","navigation","title","useNavigation","View","onPress","navigate","urlid","Image","source","uri","height","resizeMode","marginHorizontal","marginVertical","useGetData","relurl","useState","data","setData","loadmore","loadcomplete","setLoadcomplete","useEffect","axios","get","then","response","catch","error","console","log","StoreContext","createContext","StoreProvider","children","classofstudentState","setClassofstudentState","subjectState","setSubjectState","topicState","setTopicState","store","classofstudents","subjectcontext","topiccontext","languagecontext","Provider","value","HomeScreen","useContext","subject","classofstudent","topic","loadingcontainer","ActivityIndicator","textheader","Text","textheading","renderItem","item","videourlid","topichindi","keyExtractor","id","toString","showsVerticalScrollIndicator","marginLeft","fontWeight","flexDirection","width","textHeading","lineHeight","ResourceLinkCard","margin","Linking","openURL","resourceURL","NotificationImage","marginRight","LinksScreen","SafeAreaView","FlatList","resourcetitle","resourcelink","contentContainer","paddingTop","BottomTab","createBottomTabNavigator","BottomTabNavigator","route","setOptions","headerTitle","getHeaderTitle","Navigator","initialRouteName","Screen","component","options","tabBarIcon","state","routes","index","ClassSelect","setclassofstudent","languageState","setLanguageState","selClassString","movetoSubjects","classofstu","ImageBackground","require","imageBG","languagebutton","Picker","languagebuttontext","selectedValue","onValueChange","itemValue","itemIndex","Item","label","cardHeading","headingText","cardMain","cardContainer","cardInner","firstcard","cardstext","secondcard","borderRadius","alignSelf","SubjectSelect","setsubject","classString","selursubstr","mathsstr","sciencestr","sststr","englishstr","sub","subcontainer","cardcontainer","classheading","classtext","headingcontainer","paddingBottom","cards","paddingVertical","YoutubePlayer","videoID","ytdl","getInfo","err","info","format","chooseFormat","formats","quality","url","useGetUrl","params","ScreenOrientation","LANDSCAPE","Video","rate","volume","isMuted","RESIZE_MODE_CONTAIN","useNativeControls","shouldPlay","TopicCard","setTopic","engtitle","TopicSelect","Stack","App","React","isLoadingComplete","setLoadingComplete","initialNavigationState","setInitialNavigationState","containerRef","useRef","getInitialState","useLinking","prefixes","makeUrl","config","Root","path","screens","Home","Links","Settings","a","async","SplashScreen","preventAutoHide","Font","font","warn","hide","skipLoadingScreen","eva","theme","Platform","OS","StatusBar","barStyle","NavigationContainer","ref","initialState","headerShown","navigator","window","addEventListener","serviceWorker","register","scope"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,0C,uPCE5B,EAEG,OAFH,EAFG,UCKH,SAASC,EAAWC,GACjC,OACE,gBAACC,EAAA,EAAD,CACEC,KAAMF,EAAME,KACZC,KAAM,GACNC,MAAO,CAAEC,cAAe,GACxBC,MAAON,EAAMO,QAAUC,EAAyBA,I,gDCgChDC,GAnCQC,cAmCCC,IAAWC,OACtB,CACIC,UAAW,CACPC,KAAK,EAGLC,UAAU,EACVV,aAAa,EACbW,mBAAoB,KAExBC,cAAe,CACXH,KAAK,EACLI,gBAAgB,OAChBC,WAAY,SACZC,eAAgB,SAChBC,wBAAwB,GACxBC,uBAAuB,IAG3BC,KAAM,CACFC,WAAW,SACXC,SAAU,GACVC,QAAS,GACTC,UAAU,SACVC,kBAAkB,aAKfC,EA5DG,SAAC7B,GAEf,IAAM8B,EAAa,8BAAgC9B,EAAM+B,SAAW,iBAE9DC,GADQhC,EAAMiC,MACDC,2BASnB,OACI,kBAACC,EAAA,EAAD,CAAM/B,MAAOK,EAAOI,WACpB,kBAAC,OAAD,CAAMuB,QARU,WAEhBJ,EAAWK,SAAS,gBAAgB,CAACC,MAAMtC,EAAM+B,aAO7C,kBAACQ,EAAA,EAAD,CACIC,OAAQ,CAAEC,IAAKX,GACf1B,MAAO,CAAEsC,OAAQ,IAAKC,WAAY,UAAUC,kBAAmB,GAAGC,gBAAiB,OAG3F,kBAACV,EAAA,EAAD,CAAM/B,MAAOK,EAAOQ,eAChB,kBAAC,OAAD,CAAMb,MAAOK,EAAOc,MACfvB,EAAMiC,U,0BChCVa,EAAa,SAACC,GAAY,IAAD,EACXC,mBAAS,IADE,WAC3BC,EAD2B,KACtBC,EADsB,OAEHF,mBAAS,GAFN,WAE3BG,EAF2B,aAGKH,mBAAS,IAHd,WAG3BI,EAH2B,KAGdC,EAHc,KAkBlC,OAZAC,qBACE,WACAC,IAAMC,IAAI,2DAA2DT,GACpEU,MAAK,SAAAC,GACJR,EAAQQ,EAAST,MACjBI,EAAgB,MAEjBM,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEb,CAACT,IAEE,CACJF,OACAG,iBCrBAW,G,MAAeC,2BAEfC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACclB,mBAAS,IADvB,WAChCmB,EADgC,KACZC,EADY,OAEApB,mBAAS,IAFT,WAEhCqB,EAFgC,KAEnBC,EAFmB,OAGJtB,mBAAS,IAHL,WAGhCuB,EAHgC,KAGrBC,EAHqB,OAIExB,mBAAS,SAJX,WAQjCyB,EAAM,CACRC,gBAAgB,CAACP,EAAoBC,GACrCO,eAAe,CAACN,EAAaC,GAC7BM,aAAa,CAACL,EAAWC,GACzBK,gBAAgB,CAZmB,YAevC,OAAO,kBAACd,EAAae,SAAd,CAAuBC,MAAON,GAAQP,ICH9B,SAASc,EAAT,GAAoC,EAAdhD,WAAe,IAAD,EAESiD,qBAAWlB,GAA7DW,EAFyC,EAEzCA,gBAAiBC,EAFwB,EAExBA,eAAgBC,EAFQ,EAERA,aAFQ,MAGnBD,EAHmB,GAG1CO,EAH0C,iBAILR,EAJK,IAI1CS,EAJ0C,iBAKvBP,EALuB,IAK1CQ,EAL0C,aAOlBtC,EAAW,OAASqC,EAAiB,IAAMD,EAAU,IAAME,EAAQ,MAA1FnC,EAPyC,EAOzCA,KAER,OAAoB,GAT6B,EAOnCG,aAIV,kBAACjB,EAAA,EAAD,CAAM/B,MAAOK,EAAO4E,kBAClB,kBAACC,EAAA,EAAD,CAAmBnF,KAAK,QAAQG,MAAM,aAMxC,kBAAC,IAAD,KACE,kBAAC6B,EAAA,EAAD,CAAM/B,MAAOK,EAAO8E,YAClB,kBAACC,EAAA,EAAD,CAAMpF,MAAOK,EAAOgF,aAApB,WAIF,kBAAC,IAAD,CAEExC,KAAMA,EAEN7C,MAAO,CAAEC,aAAc,OAEvBqF,WAAY,gBAAGC,EAAH,EAAGA,KAAH,OACV,kBAACxD,EAAA,EAAD,KACE,kBAAC,EAAD,CAAWJ,SAAU4D,EAAKC,WAAY3D,MAAO0D,EAAK1D,MAAOmD,MAAOO,EAAKE,eAIzEC,aAAc,SAAAH,GAAI,OAAIA,EAAKI,GAAGC,YAC9BC,8BAA8B,KAWxC,IAAMxF,EAASE,IAAWC,OAAO,CAC/B2E,WAAY,CACV7C,OAAQ,MACRtB,eAAgB,SAChB8E,WAAY,MAGdT,YAAa,CACXhE,SAAU,GACV0E,WAAY,OACZ7F,MAAO,WAET+E,iBAAkB,CAChBvE,KAAM,EACNM,eAAgB,Y,4CCjDdX,EAASE,IAAWC,OAAO,CAC7BC,UAAW,CACPuF,cAAe,MACfjF,WAAY,SACZkF,MAAM,QAEVC,YAAa,CACT7E,SAAU,GACV8E,WAAW,GACXnF,eAAe,SAASD,WAAW,YAI5BqF,EApCU,SAACxG,GAMtB,OACI,kBAAC,OAAD,CAAMI,MAAO,CAACqG,OAAO,GAAIrE,QALX,WACdsE,IAAQC,QAAQ3G,EAAM4G,eAKlB,kBAACzE,EAAA,EAAD,CAAM/B,MAAOK,EAAOI,WAChB,kBAAC0B,EAAA,EAAD,CACIC,OAAQqE,IACRzG,MAAO,CAAEsC,OAAQ,IAAK2D,MAAO,IAAKI,OAAQ,EAAEK,YAAY,QAC5D,kBAAC3E,EAAA,EAAD,CAAM/B,MAAO,CAACqG,OAAO,EAAE3F,KAAK,EAAEY,QAAQ,KACtC,kBAAC,OAAD,CAAMtB,MAAOK,EAAO6F,aACftG,EAAMiC,WCVZ,SAAS8E,EAAT,GAAqC,EAAd/E,WAAe,IAAD,EAEQiD,qBAAWlB,GAA7DW,EAF0C,EAE1CA,gBAAiBC,EAFyB,EAEzBA,eAAgBC,EAFS,EAETA,aAFS,MAGpBD,EAHoB,oBAIND,EAJM,qBAKxBE,EALwB,iBAOpB9B,EAAW,mBAAjCG,EAP0C,EAO1CA,KAGR,OAAoB,GAV8B,EAOrCG,aAKT,kBAACjB,EAAA,EAAD,CAAM/B,MAAOK,EAAO4E,kBAClB,kBAACC,EAAA,EAAD,CAAmBnF,KAAK,QAAQG,MAAM,aAMxC,kBAAC0G,EAAA,EAAD,KACE,kBAAC7E,EAAA,EAAD,CAAM/B,MAAOK,EAAO8E,YAClB,kBAACC,EAAA,EAAD,CAAMpF,MAAOK,EAAOgF,aAApB,cAIF,kBAACwB,EAAA,EAAD,CAEEhE,KAAMA,EAEN7C,MAAO,CAAEC,aAAc,OAEvBqF,WAAY,gBAAGC,EAAH,EAAGA,KAAH,OACV,kBAACxD,EAAA,EAAD,KACE,kBAAC,EAAD,CAAkBF,MAAO0D,EAAKuB,cAAeN,YAAajB,EAAKwB,iBAInErB,aAAc,SAAAH,GAAI,OAAIA,EAAKI,GAAGC,YAC9BC,8BAA8B,KAWxC,IAAMxF,EAASE,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNI,gBAAiB,WAEnBkG,iBAAkB,CAChBC,WAAY,IAEd9B,WAAY,CACVxE,UAAW,MACX2B,OAAQ,MACRtB,eAAgB,SAChB8E,WAAY,MAGdT,YAAa,CACXhE,SAAU,GACV0E,WAAY,OACZ7F,MAAO,aCtELgH,EAAYC,cAGH,SAASC,EAAT,GAAmD,IAArBC,EAAoB,EAApBA,MAM3C,OAN+D,EAAdzF,WAItC0F,WAAW,CAAEC,YAAaC,EAAeH,KAGlD,gBAACH,EAAUO,UAAX,CAAqBC,iBATE,QAUrB,gBAACR,EAAUS,OAAX,CACE7H,KAAK,OACL8H,UAAWhD,EACXiD,QAAS,CACPhG,MAAO,OACPiG,WAAY,gBAAG3H,EAAH,EAAGA,QAAH,OAAiB,gBAACR,EAAD,CAAYQ,QAASA,EAASL,KAAK,gBAIpE,gBAACoH,EAAUS,OAAX,CACE7H,KAAK,QACL8H,UAAWjB,EACXkB,QAAS,CACPhG,MAAO,YACPiG,WAAY,gBAAG3H,EAAH,EAAGA,QAAH,OAAiB,gBAACR,EAAD,CAAYQ,QAASA,EAASL,KAAK,sBAO1E,SAAS0H,EAAeH,GAAQ,IAAD,MAG7B,OAFe,kBAAGA,EAAMU,QAAT,SAAG,EAAaC,OAAOX,EAAMU,MAAME,aAAnC,EAAG,EAAwCnI,MAA3C,EAhCU,QAmCvB,IAAK,OACH,MAAO,qBACT,IAAK,QACH,MAAO,uB,4CCvCAoI,GAAc,SAAC,GAAoB,IAAlBtG,EAAiB,EAAjBA,WAAiB,EAECiD,qBAAWlB,GAA/CW,EAFmC,EAEnCA,gBAAgBG,EAFmB,EAEnBA,gBAFmB,MAGCH,EAHD,GAGpB6D,GAHoB,iBAIF1D,EAJE,GAIpC2D,EAJoC,KAItBC,EAJsB,KAMvCC,EAAiB,oBAGjBA,EADgB,SAAjBF,EACkB,mHAGA,oBAGrB,IAAMG,EAAiB,SAACC,GACpBL,EAAkBK,GAClB5G,EAAWK,SAAS,sBAGxB,OACI,kBAACF,EAAA,EAAD,CAAM/B,MAAOK,GAAOI,WAChB,kBAACgI,GAAA,EAAD,CAAiBrG,OAAQsG,EAAQ,KAAqB1I,MAAOK,GAAOsI,SAChE,kBAAC5G,EAAA,EAAD,CAAM/B,MAAOK,GAAOuI,gBAChB,kBAACC,GAAA,EAAD,CAAQ7I,MAAOK,GAAOyI,mBAClBC,cAAeX,EACfY,cAAe,SAACC,EAAWC,GAAab,EAAiBY,KACzD,kBAACJ,GAAA,EAAOM,KAAR,CAAaC,MAAM,UAAUzE,MAAM,YACnC,kBAACkE,GAAA,EAAOM,KAAR,CAAaC,MAAM,QAAQzE,MAAM,YAIzC,kBAAC,OAAD,CAAM3E,MAAOK,GAAOgJ,aAChB,kBAAC,OAAD,CAAMrJ,MAAOK,GAAOiJ,aACfhB,IAIT,kBAAC,OAAD,CAAMtI,MAAOK,GAAOkJ,UAEhB,kBAACxH,EAAA,EAAD,CAAM/B,MAAOK,GAAOmJ,eAChB,kBAACzH,EAAA,EAAD,CAAM/B,MAAO,CAACK,GAAOoJ,UAAWpJ,GAAOqJ,YACnC,kBAAC,IAAD,CAAkB1H,QAAS,kBAAMuG,EAAe,OAC5C,kBAACxG,EAAA,EAAD,CAAM/B,MAAO,CAAEiG,MAAO,OAAQ3D,OAAQ,OAAQtB,eAAgB,SAAUD,WAAY,WAChF,kBAAC,OAAD,CAAMf,MAAO,CAACK,GAAOsJ,YAArB,QAOZ,kBAAC5H,EAAA,EAAD,CAAM/B,MAAO,CAACK,GAAOoJ,UAAWpJ,GAAOuJ,aACnC,kBAAC,IAAD,CAAkB5H,QAAS,kBAAMuG,EAAe,QAC5C,kBAACxG,EAAA,EAAD,CAAM/B,MAAO,CAAEiG,MAAO,OAAQ3D,OAAQ,OAAQtB,eAAgB,SAAUD,WAAY,WAChF,kBAAC,OAAD,CAAMf,MAAO,CAACK,GAAOsJ,YAArB,cAe9BtJ,GAASE,IAAWC,OAAO,CAC7BC,UAAW,CACPM,WAAY,SACZuB,OAAQ,OACRxB,gBAAiB,OACjBmF,MAAO,QAIXqD,YAAa,CACTjI,SAAU,GACV0E,WAAY,OACZkB,WAAY,EACZ/G,MAAO,WAEXuJ,UAAW,CACPxD,MAAO,MACP4D,aAAc,IACd/I,gBAAiB,OACjBwB,OAAQ,OACR+D,OAAQ,KACRwD,aAAc,IAGlBN,SAAU,CACNjH,OAAQ,MACRuH,aAAc,GACd5D,MAAO,MAEPnF,gBAAiB,4BACjBC,WAAY,UAGhB4I,UAAW,CACPtI,SAAU,IACVnB,MAAO,OACP6F,WAAY,OACZkB,WAAY,OAEhByC,UAAW,CACP5I,gBAAiB,WAErB8I,WAAY,CACR9I,gBAAiB,WAErB0I,cAAe,CACXvC,WAAY,KACZjB,cAAe,MACfhF,eAAgB,SAChBD,WAAY,SACZuB,OAAQ,QAEZ+G,YAAa,CACT/G,OAAQ,KACRuH,aAAc,GACd5D,MAAO,MACPtF,UAAW,KACXG,gBAAiB,OACjBC,WAAY,UAEhB4H,QAAS,CACLjI,KAAM,EACN6B,WAAW,QACXvB,eAAgB,SAChBD,WAAY,SACZkF,MAAO,QAGX2C,eAAe,CACX3C,MAAM,MACNnF,gBAAiB,UACjBgJ,UAAU,SACVD,aAAa,IAGjBf,mBAAoB,CAChB5I,MAAO,QACP6F,WAAW,UCjJNgE,GAAgB,SAAC,GAA0B,EAAxB1C,MAAyB,IAAlBzF,EAAiB,EAAjBA,WAAiB,EAESiD,qBAAWlB,GAAhEW,EAF4C,EAE5CA,gBAAiBG,EAF2B,EAE3BA,gBAAiBF,EAFU,EAEVA,eAFU,MAGRD,EAHQ,GAG7CS,EAH6C,iBAItBR,EAJsB,IAIpCyF,GAJoC,iBAKVvF,EALU,GAK7C2D,EAL6C,KAOhD6B,GAPgD,KAOlC,SACdC,EAAc,sBACdC,EAAW,cACXC,EAAa,UACbC,EAAS,iBACTC,EAAa,UAEI,SAAjBlC,IACA6B,EAAc,iCACdC,EAAc,6GACdC,EAAW,2BACXC,EAAa,6CACbC,EAAS,wFACTC,EAAa,0DAIjB,IAAM/B,EAAiB,SAACgC,GACpBP,EAAWO,GACX3I,EAAWK,SAAS,oBAGxB,OACI,kBAACF,EAAA,EAAD,CAAM/B,MAAOK,GAAOI,WAChB,kBAACgI,GAAA,EAAD,CAAiBrG,OAAQsG,EAAQ,KAAsB1I,MAAOK,GAAOsI,SACjE,kBAAC5G,EAAA,EAAD,CAAM/B,MAAOK,GAAOmK,cAChB,kBAACzI,EAAA,EAAD,CAAM/B,MAAOK,GAAOoK,eAChB,kBAAC1I,EAAA,EAAD,CAAM/B,MAAOK,GAAOqK,cAChB,kBAAC,OAAD,CAAM1K,MAAOK,GAAOsK,WAAYV,EAAhC,IAA8ClF,KAGtD,kBAAChD,EAAA,EAAD,CAAM/B,MAAOK,GAAOuK,kBAChB,kBAAC,OAAD,CAAM5K,MAAOK,GAAOiJ,aAApB,IAAmCY,EAAnC,MAEJ,kBAACnI,EAAA,EAAD,CAAM/B,MAAOK,GAAOoK,eAChB,kBAAC1I,EAAA,EAAD,KACI,kBAAC,IAAD,CAAkBC,QAAS,kBAAMuG,EAAe,iBAC5C,kBAAC,OAAD,CAAMvI,MAAOK,GAAOsJ,WAApB,IAAiCQ,EAAjC,QAIZ,kBAACpI,EAAA,EAAD,CAAM/B,MAAOK,GAAOoK,eAChB,kBAAC1I,EAAA,EAAD,KACI,kBAAC,IAAD,CAAkBC,QAAS,kBAAMuG,EAAe,aAC5C,kBAAC,OAAD,CAAMvI,MAAOK,GAAOsJ,WAApB,QAAqCS,EAArC,YAIZ,kBAACrI,EAAA,EAAD,CAAM/B,MAAOK,GAAOoK,eAChB,kBAAC1I,EAAA,EAAD,KACI,kBAAC,IAAD,CAAkBC,QAAS,kBAAMuG,EAAe,oBAC5C,kBAAC,OAAD,CAAMvI,MAAOK,GAAOsJ,WAApB,IAAiCU,EAAjC,QAIZ,kBAACtI,EAAA,EAAD,CAAM/B,MAAOK,GAAOoK,eAChB,kBAAC1I,EAAA,EAAD,KACI,kBAAC,IAAD,CAAkBC,QAAS,kBAAMuG,EAAe,aAC5C,kBAAC,OAAD,CAAMvI,MAAOK,GAAOsJ,WAApB,UAAuCW,EAAvC,mBAW1BjK,GAASE,IAAWC,OAAO,CAC7BC,UAAW,CACPM,WAAY,SACZC,eAAgB,SAChBsB,OAAQ,QAGZgH,YAAa,CACTjI,SAAU,GACV4F,WAAY,OACZ4D,cAAe,KACf9E,WAAY,OACZ7F,MAAO,SAEXuK,cAAe,CACXzE,cAAe,MACfrF,UAAW,MAGfmK,MAAO,CACHC,gBAAiB,MAGrBpB,UAAW,CACPtI,SAAU,GACV4F,WAAY,OACZ/G,MAAO,QACPc,eAAgB,SAChBI,WAAY,SACZL,WAAY,SACZ8I,aAAc,GACdvI,QAAS,GACTR,gBAAiB,6BAErB6H,QAAS,CACLjI,KAAM,EACN6B,WAAY,QACZvB,eAAgB,SAChBD,WAAY,SACZkF,MAAO,QAEX0E,UAAW,CACPtJ,SAAU,GACV4F,WAAY,MACZ/G,MAAO,QACP6F,WAAY,OACZ+D,UAAW,cAEfY,aAAc,CACV5J,gBAAiB,yBACjBb,aAAc,KACd4J,aAAc,GACdvI,QAAS,GAGbsJ,iBAAkB,CACd9J,gBAAiB,yBACjB+I,aAAc,M,gDCtITmB,GAAgB,SAAC,GAAwB,IAAvB3D,EAAsB,EAAtBA,MAAsB,KAAhBzF,WCJZ,SAACe,GAAY,IAAD,EACVC,mBAAS,IADC,WAC1BC,EAD0B,KACrBC,EADqB,OAEFF,mBAAS,GAFP,WAE1BG,EAF0B,aAGMH,mBAAS,IAHf,WAG1BI,EAH0B,KAGbC,EAHa,KAsBjC,OAjBAC,qBACE,WACE,IAAM+H,EAAUtI,EAWhB,OAVAuI,KAAKC,QAAQF,EAAS,IAAI,SAACG,EAAKC,GAC1BD,GAAK3H,QAAQC,IAAI0H,GACrB,IAAIE,EAASJ,KAAKK,aAAaF,EAAKG,QAAS,CAAEC,QAAS,OACpDH,IAEFxI,EAAQwI,EAAOI,KACfzI,EAAgB,OAIb,eAER,CAACF,IAEE,CACJF,OACAG,gBDjB6B2I,CADftE,EAAMuE,OAAf1J,QACCW,EAHyC,EAGzCA,KAAMG,EAHmC,EAGnCA,aAKd,OAFA6I,KAA4BA,KAAkCC,WAC9DD,OACoB,GAAhB7I,EAEI,kBAACjB,EAAA,EAAD,CAAM/B,MAAOK,GAAO4E,kBAChB,kBAACC,EAAA,EAAD,CAAmBnF,KAAK,QAAQG,MAAM,aAM1C,kBAAC6L,GAAA,EAAD,CACI3J,OAAQ,CAAEC,IAAKQ,GACfmJ,KAAM,EACNC,OAAQ,EACRC,SAAS,EACT3J,WAAYwJ,KAAMI,oBAClBC,mBAAmB,EACnBC,YAAU,EACVrM,MAAO,CAAEiG,MAAO,OAAQ3D,OAAQ,WAS1CjC,GAASE,IAAWC,OAAO,CAC7ByE,iBAAkB,CAChBvE,KAAM,EACNM,eAAgB,YENhBX,GAASE,IAAWC,OAAO,CAC7BC,UAAW,CACPuF,cAAe,MACfjF,WAAY,SACZkF,MAAM,QAEVC,YAAa,CACT7E,SAAU,GACV8E,WAAW,GACXnF,eAAe,SAASD,WAAW,YAM5BuL,GA7CG,SAAC1M,GAEf,IAAMgC,EAAaE,0BAEZ0C,EAAgBK,qBAAWlB,GAA3Ba,aAJkB,MAKAA,EALA,GAKZ+H,GALY,WAYzB,OACI,kBAAC,OAAD,CAAMvM,MAAO,CAACqG,OAAO,GAAIrE,QANX,WACduK,EAAS3M,EAAM4M,UACf5K,EAAWK,SAAS,cAKhB,kBAACF,EAAA,EAAD,CAAM/B,MAAOK,GAAOI,WAChB,kBAAC0B,EAAA,EAAD,CACIC,OAAQqE,IACRzG,MAAO,CAAEsC,OAAQ,IAAK2D,MAAO,IAAKI,OAAQ,EAAEK,YAAY,QAC5D,kBAAC3E,EAAA,EAAD,CAAM/B,MAAO,CAACqG,OAAO,EAAE3F,KAAK,EAAEY,QAAQ,KACtC,kBAAC,OAAD,CAAMtB,MAAOK,GAAO6F,aACftG,EAAMiC,WCrBd4K,GAAc,SAAC,GAAiB,EAAhB7K,WAAiB,IAAD,EAEoBiD,qBAAWlB,GAAhEW,EAFiC,EAEjCA,gBAAiBC,EAFgB,EAEhBA,eAAgBE,EAFA,EAEAA,gBAFA,MAIXF,EAJW,GAIlCO,EAJkC,iBAKGR,EALH,IAKlCS,EALkC,iBAMCN,EAND,IAMlC2D,EANkC,aAQV1F,EAAW,aAAeqC,EAAiB,IAAMD,EAAU,MAAlFjC,EARiC,EAQjCA,KAER,OAAiB,GAVwB,EAQ3BG,aAIN,kBAACjB,EAAA,EAAD,CAAM/B,MAAOK,GAAO4E,kBAChB,kBAACC,EAAA,EAAD,CAAmBnF,KAAK,QAAQG,MAAM,aAM5B,SAAfkI,EAEK,kBAACxB,EAAA,EAAD,CAAc5G,MAAO,CAACsB,QAAQ,KAC1B,kBAACuF,EAAA,EAAD,CAEIhE,KAAMA,EAENyC,WAAY,gBAAGC,EAAH,EAAGA,KAAH,OACR,kBAACxD,EAAA,EAAD,KACI,kBAAC,GAAD,CAAYF,MAAQ0D,EAAKE,WAAY+G,SAAUjH,EAAKP,UAI5DU,aAAc,SAAAH,GAAI,OAAIA,EAAKI,GAAGC,YAC9BC,8BAA8B,KAStC,kBAACe,EAAA,EAAD,CAAc5G,MAAO,CAACsB,QAAQ,KAC1B,kBAACuF,EAAA,EAAD,CAEIhE,KAAMA,EAENyC,WAAY,gBAAGC,EAAH,EAAGA,KAAH,OACR,kBAACxD,EAAA,EAAD,KACI,kBAAC,GAAD,CAAYF,MAAQ0D,EAAKP,MAAOwH,SAAUjH,EAAKP,UAIvDU,aAAc,SAAAH,GAAI,OAAIA,EAAKI,GAAGC,YAC9BC,8BAA8B,MAWhDxF,GAASE,IAAWC,OAAO,CAC7ByE,iBAAkB,CAChBvE,KAAM,EACNM,eAAgB,Y,4kBCvDtB,IAAM0L,GAAQpM,cAEC,SAASqM,GAAI/M,GAAQ,IAAD,EACegN,IAAMhK,UAAS,GAD9B,WAC1BiK,EAD0B,KACPC,EADO,OAE2BF,IAAMhK,WAFjC,WAE1BmK,EAF0B,KAEFC,EAFE,KAG3BC,EAAeL,IAAMM,SACnBC,ECvBK,SAASF,GACtB,OAAOG,aAAWH,EAAc,CAC9BI,SAAU,CAAC/G,IAAQgH,QAAQ,MAC3BC,OAAQ,CACNC,KAAM,CACJC,KAAM,OACNC,QAAS,CACPC,KAAM,OACNC,MAAO,QACPC,SAAU,gBDcUT,CAAWH,GAA/BE,gBAJyB,EAKCP,IAAMhK,UAAS,GALhB,qBAQjCgK,IAAM1J,WAAU,WACd,EAAA4K,EAAAC,OAAA,gEAEIC,IAAaC,kBAFjB,KAKIjB,EALJ,WAAAc,EAAA,MAKoCX,KALpC,oDAAAW,EAAA,MAQUI,IAAA,MACDrO,IAASsO,KADR,CAEJ,aAAczF,EAAQ,SAV5B,yDAcIjF,QAAQ2K,KAAR,MAdJ,yBAgBItB,GAAmB,GACnBkB,IAAaK,OAjBjB,sFAwBC,IAOH,OAAKxB,GAAsBjN,EAAM0O,kBAyB7B,kBAAC,sBAAD,OAAyBC,GAAzB,CAA8BC,MAAOD,WACnC,kBAAC,EAAD,KACE,kBAACxM,EAAA,EAAD,CAAM/B,MAAOK,GAAOI,WACD,QAAhBgO,IAASC,IAAgB,kBAACC,EAAA,EAAD,CAAWC,SAAS,YAC9C,kBAACC,EAAA,EAAD,CAAqBC,IAAK7B,EAAc8B,aAAchC,GACpD,kBAAC,GAAMtF,UAAP,KACE,kBAAC,GAAME,OAAP,CAAcE,QAAS,CAAEmH,aAAa,GAASlP,KAAK,kBAAkB8H,UAAWM,KACjF,kBAAC,GAAMP,OAAP,CAAe7H,KAAK,oBAAoB8H,UAAWmC,KACnD,kBAAC,GAAMpC,OAAP,CAAe7H,KAAK,kBAAkB8H,UAAW6E,KACjD,kBAAC,GAAM9E,OAAP,CAAcE,QAAS,CAAEmH,aAAa,GAASlP,KAAK,WAAW8H,UAAWR,IAC1E,kBAAC,GAAMO,OAAP,CAAcE,QAAS,CAAEmH,aAAa,GAASlP,KAAK,gBAAgB8H,UAAWoD,UAlCpF,KA4CX,IAAM3K,GAASE,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNI,gBAAiB,W,+DE5GjB,kBAAmBmO,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CjM,MAAK,SAAUgI,OAGf9H,OAAM,SAAUC,GACfC,QAAQ4H,KAAK,oCAAqC7H,U,oBCV1D/D,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,sC","file":"static/js/app.a52d21f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/notification.2012e4ad.png\";","const tintColor = '#2f95dc';\n\nexport default {\n  tintColor,\n  tabIconDefault: '#ccc',\n  tabIconSelected: tintColor,\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: tintColor,\n  noticeText: '#fff',\n};\n","import { Ionicons } from '@expo/vector-icons';\nimport * as React from 'react';\n\nimport Colors from '../constants/Colors';\n\nexport default function TabBarIcon(props) {\n  return (\n    <Ionicons\n      name={props.name}\n      size={30}\n      style={{ marginBottom: -3 }}\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\n    />\n  );\n}\n","    import React from 'react'\r\nimport { View, Image, StyleSheet, ImageBackground } from 'react-native';\r\nimport { Card, Text, Button } from '@ui-kitten/components';\r\nimport { TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { Linking } from 'expo';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst INITIAL_ROUTE_NAME = 'YoutubePlayer';\r\n\r\nconst Videocard = (props) => {\r\n\r\n    const firstimage = \"https://img.youtube.com/vi/\" + props.imageURL + \"/hqdefault.jpg\";\r\n    const title = props.title;\r\n    const navigation = useNavigation();\r\n\r\n\r\n    const openYoutube = () => {\r\n        //Linking.openURL('https://www.youtube.com/watch?v='+props.imageURL+'?autoplay=1');\r\n        navigation.navigate('YoutubePlayer',{urlid:props.imageURL});\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n        <Card onPress={openYoutube} >\r\n            <Image\r\n                source={{ uri: firstimage }}\r\n                style={{ height: 200, resizeMode: 'stretch',marginHorizontal: -24,marginVertical: -16, }} >\r\n            </Image>\r\n        </Card>\r\n        <View style={styles.textcontainer}>\r\n            <Text style={styles.text}>\r\n                {props.title}\r\n            </Text>\r\n        </View>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create(\r\n    {\r\n        container: {\r\n            flex:1,\r\n            // marginLeft:25,\r\n            // marginRight:25,\r\n            marginTop:7,\r\n            marginBottom:7,\r\n            paddingHorizontal: -200,\r\n        },\r\n        textcontainer: {\r\n            flex:1,\r\n            backgroundColor:'#fff',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            borderBottomRightRadius:20,\r\n            borderBottomLeftRadius:20,\r\n\r\n        },\r\n        text: {\r\n            fontFamily:'normal',\r\n            fontSize: 16,\r\n            padding: 10,\r\n            textAlign:'center',\r\n            textAlignVertical:'center',\r\n        }\r\n    }\r\n);\r\n\r\nexport default Videocard;","import axios from 'react-native-axios';\r\nimport {useState,useEffect} from 'react';\r\n\r\nexport const useGetData = (relurl) => {\r\n    const [data,setData] = useState(\"\");\r\n    const [loadmore,setLoadmore] = useState(0);\r\n    const [loadcomplete,setLoadcomplete] = useState(0);\r\n\r\n  \r\n    useEffect(\r\n      () => {\r\n      axios.get(\"https://elearning-api-58d0a-2902d.web.beta.kintohub.com/\"+relurl)\r\n      .then(response => {\r\n        setData(response.data);\r\n        setLoadcomplete(1);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    }, [loadmore]);\r\n  \r\n    return{\r\n      data,\r\n      loadcomplete\r\n    };\r\n  };\r\n\r\n","import React,{createContext,useState} from 'react';\r\n\r\nconst StoreContext = createContext(); //use this to fetch data\r\n\r\nconst StoreProvider= ({ children }) => { //use this as a provider\r\nconst [classofstudentState,setClassofstudentState] = useState(\"\");\r\nconst [subjectState,setSubjectState] = useState(\"\");\r\nconst [topicState,setTopicState] = useState(\"\");\r\nconst [languageState,setLanguageState] = useState(\"hindi\");\r\n\r\n\r\n\r\nconst store={\r\n    classofstudents:[classofstudentState,setClassofstudentState],\r\n    subjectcontext:[subjectState,setSubjectState],\r\n    topiccontext:[topicState,setTopicState],\r\n    languagecontext:[languageState,setLanguageState],\r\n}\r\n\r\nreturn <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\r\n}\r\n\r\nexport {StoreContext,StoreProvider};","import * as WebBrowser from 'expo-web-browser';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Image, Platform, StyleSheet, Text, TouchableOpacity, View,ActivityIndicator } from 'react-native';\nimport { ScrollView, FlatList } from 'react-native-gesture-handler';\n\nimport { MonoText } from '../components/StyledText';\n\nimport Videocard from '../components/Videocard'\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nimport axios from 'react-native-axios';\nimport { useGetData } from '../components/useGetData'\nimport { useRoute } from '@react-navigation/core';\nimport { StoreContext } from '../contexts/MainContext'\n\n\nexport default function HomeScreen({ navigation }) {\n\n  const { classofstudents, subjectcontext, topiccontext } = useContext(StoreContext);\n  const [subject, setsubject] = subjectcontext;\n  const [classofstudent, setclassofstudent] = classofstudents;\n  const [topic, setTopic] = topiccontext;\n\n  const { data, loadcomplete } = useGetData(\"api/\" + classofstudent + '/' + subject + '/' + topic + '/');\n\n  if (loadcomplete == 0) {\n    return (\n      <View style={styles.loadingcontainer}>\n        <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n      </View>\n    );\n  }\n  else {\n    return (\n      <SafeAreaView>\n        <View style={styles.textheader}>\n          <Text style={styles.textheading}>\n            Videos\n        </Text>\n        </View>\n        <FlatList\n\n          data={data}\n\n          style={{ marginBottom: '15%' }}\n\n          renderItem={({ item }) =>\n            <View>\n              <Videocard imageURL={item.videourlid} title={item.title} topic={item.topichindi} />\n            </View>\n\n          }\n          keyExtractor={item => item.id.toString()}\n          showsVerticalScrollIndicator={false}\n\n        />\n\n      </SafeAreaView>\n\n\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  textheader: {\n    height: '15%',\n    justifyContent: 'center',\n    marginLeft: '9%',\n\n  },\n  textheading: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    color: '#848080',\n  },\n  loadingcontainer: {\n    flex: 1,\n    justifyContent: \"center\"\n  }\n});","import React from 'react';\r\nimport { View, StyleSheet, Image } from 'react-native';\r\nimport { Card, Text, Button } from '@ui-kitten/components';\r\nimport NotificationImage from '../Images/notification.png';\r\nimport { Linking } from 'expo';\r\n\r\nconst ResourceLinkCard = (props) => {\r\n\r\n    const onPressOpen=()=>{\r\n        Linking.openURL(props.resourceURL);\r\n    }\r\n\r\n    return (\r\n        <Card style={{margin:3}} onPress={onPressOpen}>\r\n            <View style={styles.container}>\r\n                <Image\r\n                    source={NotificationImage}\r\n                    style={{ height: 100, width: 100, margin: 0,marginRight:'1%' }} />\r\n                <View style={{margin:1,flex:1,padding:10}}>\r\n                <Text style={styles.textHeading}>\r\n                    {props.title}\r\n                </Text>\r\n                </View>\r\n            </View>\r\n\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        width:'100%',\r\n    },\r\n    textHeading: {\r\n        fontSize: 25,\r\n        lineHeight:30,\r\n        justifyContent:'center',alignItems:'center'\r\n    }\r\n});\r\n\r\nexport default ResourceLinkCard;","import { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { StyleSheet, Text, View, SafeAreaView, FlatList,ActivityIndicator } from 'react-native';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\nimport { StoreContext } from '../contexts/MainContext'\nimport { useGetData } from '../components/useGetData'\nimport ResourceLinkCard from '../components/ResourceLinkCard'\n\n\nexport default function LinksScreen({ navigation }) {\n\n  const { classofstudents, subjectcontext, topiccontext } = useContext(StoreContext);\n  const [subject, setsubject] = subjectcontext;\n  const [classofstudent, setclassofstudent] = classofstudents;\n  const [topic, setTopic] = topiccontext;\n\n  const { data,loadcomplete } = useGetData(\"api/resources/\");\n\n\n  if (loadcomplete == 0) {\n    return (\n      <View style={styles.loadingcontainer}>\n        <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n      </View>\n    );\n  }\n  else {\n    return (\n      <SafeAreaView>\n        <View style={styles.textheader}>\n          <Text style={styles.textheading}>\n            Resources\n      </Text>\n        </View>\n        <FlatList\n\n          data={data}\n\n          style={{ marginBottom: '21%' }}\n\n          renderItem={({ item }) =>\n            <View>\n              <ResourceLinkCard title={item.resourcetitle} resourceURL={item.resourcelink} />\n            </View>\n\n          }\n          keyExtractor={item => item.id.toString()}\n          showsVerticalScrollIndicator={false}\n\n        />\n\n      </SafeAreaView>\n\n\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa',\n  },\n  contentContainer: {\n    paddingTop: 15,\n  },\n  textheader: {\n    marginTop: '12%',\n    height: '15%',\n    justifyContent: 'center',\n    marginLeft: '9%',\n\n  },\n  textheading: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    color: '#848080',\n  },\n\n});\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\n\nimport TabBarIcon from '../components/TabBarIcon';\nimport HomeScreen from '../screens/HomeScreen';\nimport LinksScreen from '../screens/LinksScreen';\n\nconst BottomTab = createBottomTabNavigator();\nconst INITIAL_ROUTE_NAME = 'Home';\n\nexport default function BottomTabNavigator({ route,navigation }) {\n  // Set the header title on the parent stack navigator depending on the\n  // currently active tab. Learn more in the documentation:\n  // https://reactnavigation.org/docs/en/screen-options-resolution.html\n  navigation.setOptions({ headerTitle: getHeaderTitle(route) });\n\n  return (\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\n      <BottomTab.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={{\n          title: 'Home',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-boat\" / >,\n        }}\n\n      />\n      <BottomTab.Screen\n        name=\"Links\"\n        component={LinksScreen}\n        options={{\n          title: 'Resources',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-bookmarks\" />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\nfunction getHeaderTitle(route) {\n  const routeName = route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Home':\n      return 'How to get started';\n    case 'Links':\n      return 'Links to learn more';\n  }\n}\n","import React, { useContext } from 'react';\r\nimport { View, StyleSheet, ImageBackground, Picker } from 'react-native';\r\nimport { Card, Text, Button, withStyles } from '@ui-kitten/components';\r\nimport { StoreContext } from '../contexts/MainContext';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\n\r\n\r\nexport const ClassSelect = ({ navigation }) => {\r\n\r\n    const { classofstudents,languagecontext } = useContext(StoreContext);\r\n    const [classofstudent, setclassofstudent] = classofstudents;\r\n    const [languageState,setLanguageState] = languagecontext;\r\n\r\n    var selClassString = \"Select your Class\";\r\n\r\n    if(languageState == 'hindi'){\r\n        selClassString = \"अपनी कक्षा का चयन करें\";\r\n    }\r\n    else{\r\n        selClassString = \"Select your Class\";\r\n    }\r\n\r\n    const movetoSubjects = (classofstu) => {\r\n        setclassofstudent(classofstu);\r\n        navigation.navigate('Subject Selection');\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <ImageBackground source={require('../Images/bg.jpg')} style={styles.imageBG}>\r\n                <View style={styles.languagebutton}>\r\n                    <Picker style={styles.languagebuttontext}\r\n                        selectedValue={languageState}\r\n                        onValueChange={(itemValue, itemIndex)=>{setLanguageState(itemValue)}}>\r\n                        <Picker.Item label=\"English\" value=\"english\" />\r\n                        <Picker.Item label=\"Hindi\" value=\"hindi\" />\r\n                    </Picker>\r\n                </View>\r\n\r\n                <Card style={styles.cardHeading}>\r\n                    <Text style={styles.headingText}>\r\n                        {selClassString}\r\n                    </Text>\r\n                </Card>\r\n\r\n                <Card style={styles.cardMain}>\r\n\r\n                    <View style={styles.cardContainer}>\r\n                        <View style={[styles.cardInner, styles.firstcard]} >\r\n                            <TouchableOpacity onPress={() => movetoSubjects('9')}>\r\n                                <View style={{ width: '100%', height: '100%', justifyContent: 'center', alignItems: 'center' }}>\r\n                                    <Text style={[styles.cardstext]}>\r\n                                        9\r\n                                    </Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n\r\n                        </View>\r\n                        <View style={[styles.cardInner, styles.secondcard]} >\r\n                            <TouchableOpacity onPress={() => movetoSubjects('10')}>\r\n                                <View style={{ width: '100%', height: '100%', justifyContent: 'center', alignItems: 'center' }}>\r\n                                    <Text style={[styles.cardstext]}>\r\n                                        10\r\n                                    </Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n\r\n                        </View>\r\n                    </View>\r\n                </Card>\r\n\r\n            </ImageBackground>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        alignItems: 'center',\r\n        height: '100%',\r\n        backgroundColor: '#fff',\r\n        width: '100%'\r\n\r\n    },\r\n\r\n    headingText: {\r\n        fontSize: 25,\r\n        fontWeight: 'bold',\r\n        paddingTop: 9,\r\n        color: '#bf1818'\r\n    },\r\n    cardInner: {\r\n        width: '50%',\r\n        borderRadius: 120,\r\n        backgroundColor: '#fff',\r\n        height: '100%',\r\n        margin: '1%',\r\n        borderRadius: 20,\r\n    },\r\n\r\n    cardMain: {\r\n        height: '35%',\r\n        borderRadius: 50,\r\n        width: '90%',\r\n        // marginTop: '10%',\r\n        backgroundColor: 'rgba(247, 242, 242, 0.59)',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    cardstext: {\r\n        fontSize: 100,\r\n        color: '#fff',\r\n        fontWeight: 'bold',\r\n        paddingTop: '60%',\r\n    },\r\n    firstcard: {\r\n        backgroundColor: '#2c6ff7',\r\n    },\r\n    secondcard: {\r\n        backgroundColor: '#28c432',\r\n    },\r\n    cardContainer: {\r\n        paddingTop: '0%',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100%'\r\n    },\r\n    cardHeading: {\r\n        height: '9%',\r\n        borderRadius: 50,\r\n        width: '90%',\r\n        marginTop: '7%',\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center'\r\n    },\r\n    imageBG: {\r\n        flex: 1,\r\n        resizeMode:\"cover\",\r\n        justifyContent: \"center\",\r\n        alignItems: 'center',\r\n        width: '100%'\r\n\r\n    },\r\n    languagebutton:{\r\n        width:'40%',\r\n        backgroundColor: '#f97a7a',\r\n        alignSelf:'center',\r\n        borderRadius:10,\r\n        \r\n    },\r\n    languagebuttontext: {\r\n        color: 'white',\r\n        fontWeight:'bold',\r\n    },\r\n  \r\n});","import React, { useContext } from 'react';\r\nimport { View, StyleSheet, ImageBackground } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { Card, Text, Button, withStyles } from '@ui-kitten/components';\r\nimport { StoreContext } from '../contexts/MainContext';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\n\r\n\r\nexport const SubjectSelect = ({ route, navigation }) => {\r\n\r\n    const { classofstudents, languagecontext, subjectcontext } = useContext(StoreContext);\r\n    const [classofstudent, setclassofstudent] = classofstudents;\r\n    const [subject, setsubject] = subjectcontext;\r\n    const [languageState, setLanguageState] = languagecontext;\r\n\r\n    var classString = \"Class\",\r\n        selursubstr = \"Select Your Subject\",\r\n        mathsstr = \"Mathematics\",\r\n        sciencestr = \"Science\",\r\n        sststr = \"Social Science\",\r\n        englishstr = \"English\";\r\n\r\n    if (languageState == 'hindi') {\r\n        classString = \"कक्षा\";\r\n        selursubstr = \"अपने विषय का चयन करें\";\r\n        mathsstr = \"गणित\";\r\n        sciencestr = \"विज्ञान\";\r\n        sststr = \"सामाजिक विज्ञान\";\r\n        englishstr = \"अंग्रेज़ी\";\r\n    }\r\n\r\n\r\n    const movetoSubjects = (sub) => {\r\n        setsubject(sub);\r\n        navigation.navigate('Topic Selection');\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <ImageBackground source={require('../Images/bg5.jpg')} style={styles.imageBG}>\r\n                <View style={styles.subcontainer}>\r\n                    <View style={styles.cardcontainer}>\r\n                        <View style={styles.classheading}>\r\n                            <Text style={styles.classtext}>{classString}-{classofstudent}</Text>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.headingcontainer}>\r\n                        <Text style={styles.headingText}> {selursubstr} </Text>\r\n                    </View>\r\n                    <View style={styles.cardcontainer}>\r\n                        <View>\r\n                            <TouchableOpacity onPress={() => movetoSubjects(\"mathematics\")}>\r\n                                <Text style={styles.cardstext}> {mathsstr} </Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.cardcontainer}>\r\n                        <View>\r\n                            <TouchableOpacity onPress={() => movetoSubjects(\"science\")}>\r\n                                <Text style={styles.cardstext}>     {sciencestr}     </Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.cardcontainer}>\r\n                        <View>\r\n                            <TouchableOpacity onPress={() => movetoSubjects(\"Social Science\")}>\r\n                                <Text style={styles.cardstext}> {sststr} </Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.cardcontainer}>\r\n                        <View>\r\n                            <TouchableOpacity onPress={() => movetoSubjects(\"english\")}>\r\n                                <Text style={styles.cardstext}>       {englishstr}        </Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </ImageBackground>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n    },\r\n\r\n    headingText: {\r\n        fontSize: 35,\r\n        paddingTop: \"6.5%\",\r\n        paddingBottom: '2%',\r\n        fontWeight: 'bold',\r\n        color: 'white',\r\n    },\r\n    cardcontainer: {\r\n        flexDirection: 'row',\r\n        marginTop: '4%',\r\n    },\r\n\r\n    cards: {\r\n        paddingVertical: '2%',\r\n    },\r\n\r\n    cardstext: {\r\n        fontSize: 30,\r\n        paddingTop: '5.5%',\r\n        color: '#ffff',\r\n        justifyContent: 'center',\r\n        fontFamily: 'Roboto',\r\n        alignItems: 'center',\r\n        borderRadius: 10,\r\n        padding: 10,\r\n        backgroundColor: 'rgba(160, 150, 150, 0.87)',\r\n    },\r\n    imageBG: {\r\n        flex: 1,\r\n        resizeMode: \"cover\",\r\n        justifyContent: \"center\",\r\n        alignItems: 'center',\r\n        width: '100%'\r\n    },\r\n    classtext: {\r\n        fontSize: 45,\r\n        paddingTop: '10%',\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        alignSelf: 'flex-start',\r\n    },\r\n    classheading: {\r\n        backgroundColor: 'rgba(173, 35, 35,0.89)',\r\n        marginBottom: '5%',\r\n        borderRadius: 10,\r\n        padding: 7,\r\n    },\r\n\r\n    headingcontainer: {\r\n        backgroundColor: 'rgba(173, 35, 35,0.89)',\r\n        borderRadius: 10,\r\n    }\r\n});","import React from 'react';\r\nimport { View,Text,ActivityIndicator,StyleSheet } from 'react-native'\r\nimport { WebView } from 'react-native-webview';\r\nimport { useGetUrl } from './useGetUrl'\r\nimport { Video } from 'expo-av';\r\nimport * as ScreenOrientation from 'expo-screen-orientation';\r\n\r\nexport const YoutubePlayer = ({route,navigation}) => {\r\n\r\n    const {urlid} = route.params;\r\n    const { data, loadcomplete } = useGetUrl(urlid);\r\n\r\n\r\n    ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE);\r\n    ScreenOrientation.unlockAsync();\r\n    if (loadcomplete == 0) {\r\n        return (\r\n            <View style={styles.loadingcontainer}>\r\n                <ActivityIndicator size=\"large\" color=\"#0000ff\" />\r\n            </View>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <Video\r\n                source={{ uri: data }}\r\n                rate={1.0}\r\n                volume={1.0}\r\n                isMuted={false}\r\n                resizeMode={Video.RESIZE_MODE_CONTAIN}\r\n                useNativeControls={true}\r\n                shouldPlay\r\n                style={{ width: '100%', height: '100%' }}\r\n\r\n            />\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    loadingcontainer: {\r\n      flex: 1,\r\n      justifyContent: \"center\"\r\n    }\r\n  });","import {useState,useEffect} from 'react';\r\nimport ytdl from \"react-native-ytdl\"\r\n\r\nexport const useGetUrl = (relurl) => {\r\n    const [data,setData] = useState(\"\");\r\n    const [loadmore,setLoadmore] = useState(0);\r\n    const [loadcomplete,setLoadcomplete] = useState(0);\r\n\r\n    useEffect(\r\n      () => {\r\n        const videoID = relurl;\r\n        ytdl.getInfo(videoID, {}, (err, info) => {\r\n          if (err) console.log(err);\r\n          let format = ytdl.chooseFormat(info.formats, { quality: '18' });\r\n          if (format) {\r\n            //console.log(format.url);\r\n            setData(format.url);\r\n            setLoadcomplete(1);\r\n          }\r\n        });\r\n\r\n        return () => {\r\n        };\r\n    }, [loadmore]);\r\n  \r\n    return{\r\n      data,\r\n      loadcomplete\r\n    };\r\n  };\r\n\r\n","import React, { useContext } from 'react';\r\nimport { Card, Text, Button } from '@ui-kitten/components';\r\nimport NotificationImage from '../Images/notification.png'\r\nimport { View, StyleSheet, Image } from 'react-native';\r\nimport {StoreContext} from '../contexts/MainContext'\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Linking } from \"expo\";\r\n\r\nconst TopicCard = (props) => {\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const {topiccontext} = useContext(StoreContext);\r\n    const [topic,setTopic] = topiccontext;\r\n\r\n    const onPressOpen=()=>{\r\n        setTopic(props.engtitle);\r\n        navigation.navigate('Homepage');\r\n    }\r\n\r\n    return (\r\n        <Card style={{margin:3}} onPress={onPressOpen}>\r\n            <View style={styles.container}>\r\n                <Image\r\n                    source={NotificationImage}\r\n                    style={{ height: 100, width: 100, margin: 0,marginRight:'1%' }} />\r\n                <View style={{margin:1,flex:1,padding:10}}>\r\n                <Text style={styles.textHeading}>\r\n                    {props.title}\r\n                </Text>\r\n                </View>\r\n            </View>\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        width:'100%',\r\n    },\r\n    textHeading: {\r\n        fontSize: 25,\r\n        lineHeight:30,\r\n        justifyContent:'center',alignItems:'center'\r\n    }\r\n});\r\n\r\n\r\n\r\nexport default TopicCard;","import React, { useContext } from 'react';\r\nimport { View ,SafeAreaView,FlatList,StyleSheet,ActivityIndicator } from 'react-native';\r\nimport { useGetData } from '../components/useGetData';\r\nimport { StoreContext } from '../contexts/MainContext';\r\nimport Videocard from '../components/Videocard';\r\nimport TopicCard from '../components/TopicCard'\r\n\r\nexport const TopicSelect = ({navigation}) => {\r\n\r\n    const { classofstudents, subjectcontext, languagecontext } = useContext(StoreContext);\r\n\r\n    const [subject, setsubject] = subjectcontext;\r\n    const [classofstudent, setclassofstudent] = classofstudents;\r\n    const [languageState, setLanguageState] = languagecontext;\r\n\r\n    const { data, loadcomplete } = useGetData('api/topic/' + classofstudent + '/' + subject + '/');\r\n\r\n    if(loadcomplete==0){\r\n        return (\r\n            <View style={styles.loadingcontainer}>\r\n                <ActivityIndicator size=\"large\" color=\"#0000ff\" />\r\n            </View>\r\n        );\r\n    }\r\n    else{\r\n\r\n        if(languageState=='hindi'){\r\n            return (\r\n                <SafeAreaView style={{padding:10}}>\r\n                    <FlatList\r\n        \r\n                        data={data}\r\n          \r\n                        renderItem={({ item }) =>\r\n                            <View >\r\n                                <TopicCard  title ={item.topichindi} engtitle={item.topic}/>\r\n                            </View>\r\n        \r\n                        }\r\n                        keyExtractor={item => item.id.toString()}\r\n                        showsVerticalScrollIndicator={false}\r\n        \r\n                    />\r\n        \r\n                </SafeAreaView>\r\n            );\r\n        }\r\n        else{\r\n            return (\r\n                <SafeAreaView style={{padding:10}}>\r\n                    <FlatList\r\n        \r\n                        data={data}\r\n          \r\n                        renderItem={({ item }) =>\r\n                            <View >\r\n                                <TopicCard  title ={item.topic} engtitle={item.topic}/>\r\n                            </View>\r\n        \r\n                        }\r\n                        keyExtractor={item => item.id.toString()}\r\n                        showsVerticalScrollIndicator={false}\r\n        \r\n                    />\r\n        \r\n                </SafeAreaView>\r\n            );\r\n        }\r\n    }\r\n\r\n}   \r\n\r\nconst styles = StyleSheet.create({\r\n    loadingcontainer: {\r\n      flex: 1,\r\n      justifyContent: \"center\"\r\n    }\r\n  });","import 'react-native-gesture-handler';\r\nimport  React from 'react';\r\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\r\nimport { AppLoading, SplashScreen } from 'expo';\r\nimport * as Font from 'expo-font';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport BottomTabNavigator from './navigation/BottomTabNavigator';\r\nimport useLinking from './navigation/useLinking';\r\nimport { ApplicationProvider, Layout, Text } from '@ui-kitten/components';\r\nimport * as eva from '@eva-design/eva';\r\nimport { ClassSelect } from './screens/ClassSelect';\r\nimport { SubjectSelect } from './screens/SubjectSelect'\r\nimport { YoutubePlayer } from './components/YoutubePlayer'\r\nimport { StoreProvider } from './contexts/MainContext'\r\nimport {TopicSelect} from './screens/TopicSelect'\r\nimport { Asset } from 'expo-asset';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function App(props) {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\r\n  const containerRef = React.useRef();\r\n  const { getInitialState } = useLinking(containerRef);\r\n  const  [isAppReady,setAppReady] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHide();\r\n\r\n        // Load our initial navigation state\r\n        setInitialNavigationState(await getInitialState());\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          'space-mono': require('./assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hide();\r\n      }\r\n    }\r\n\r\n    \r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  const cacheSplashResourcesAsync = async () => {\r\n    const loader = require('./assets/loading.gif');\r\n    return Asset.fromModule(loader).downloadAsync();\r\n  };\r\n\r\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\r\n    return null;\r\n    // if(!isAppReady){\r\n    //   return (\r\n    //     <AppLoading\r\n    //       startAsync={cacheSplashResourcesAsync}\r\n    //       onFinish={() => setAppReady(true)}\r\n    //       onError={console.warn}\r\n    //       autoHideSplash={false}\r\n    //     />\r\n    //   );\r\n    // }\r\n    // else{\r\n    //   return(\r\n    //     <View style={{ flex: 1 }}>\r\n    //       <Image\r\n    //         source={require('./assets/loading.gif')}\r\n    //         onLoad={this._cacheResourcesAsync}\r\n    //       />\r\n    //     </View>\r\n    //     );\r\n      \r\n    //}\r\n  } else {\r\n    return (\r\n      <ApplicationProvider {...eva} theme={eva.light}>\r\n        <StoreProvider>\r\n          <View style={styles.container}>\r\n            {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\r\n            <NavigationContainer ref={containerRef} initialState={initialNavigationState}>\r\n              <Stack.Navigator>\r\n                <Stack.Screen options={{ headerShown: false }} name=\"Class Selection\" component={ClassSelect} />\r\n                <Stack.Screen  name=\"Subject Selection\" component={SubjectSelect} />\r\n                <Stack.Screen  name=\"Topic Selection\" component={TopicSelect} />\r\n                <Stack.Screen options={{ headerShown: false }} name=\"Homepage\" component={BottomTabNavigator} />\r\n                <Stack.Screen options={{ headerShown: false }} name=\"YoutubePlayer\" component={YoutubePlayer} />\r\n              </Stack.Navigator>\r\n            </NavigationContainer>\r\n          </View>\r\n        </StoreProvider>\r\n      </ApplicationProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n});\r\n","import { useLinking } from '@react-navigation/native';\nimport { Linking } from 'expo';\n\nexport default function(containerRef) {\n  return useLinking(containerRef, {\n    prefixes: [Linking.makeUrl('/')],\n    config: {\n      Root: {\n        path: 'root',\n        screens: {\n          Home: 'home',\n          Links: 'links',\n          Settings: 'settings',\n        },\n      },\n    },\n  });\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/bg.b0463039.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg5.ddcff30d.jpg\";","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/loading.05adda92.gif\";"],"sourceRoot":""}